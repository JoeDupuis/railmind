<%= form_with(model: agent) do |form| %>
  <%= form_errors(agent) %>

  <div>
    <%= form.label :name %><br>
    <%= form.text_field :name %>
  </div>

  <div>
    <%= form.label :docker_image %><br>
    <%= form.text_field :docker_image %>
  </div>

  <div>
    <%= form.label :docker_host %><br>
    <%= form.text_field :docker_host %>
  </div>

  <div>
    <%= form.label :start_arguments %><br>
    <%= form.text_area :start_arguments %>
  </div>

  <div>
    <%= form.label :continue_arguments %><br>
    <%= form.text_area :continue_arguments %>
  </div>

  <div>
    <%= form.label :workplace_path %><br>
    <%= form.text_field :workplace_path %>
  </div>

  <div>
    <%= form.label :volumes_config, "Volumes (JSON format)" %><br>
    <%= form.text_area :volumes_config, readonly: !agent.new_record? %>
    <% unless agent.new_record? %>
      <small style="color: #666;">Volumes cannot be edited after creation</small>
    <% end %>
  </div>

  <div>
    <%= form.label :env_variables_json, "Environment Variables (JSON format)" %><br>
    <%= form.text_area :env_variables_json %>
    <small style="color: #666;">Example: {"NODE_ENV": "development", "DEBUG": "true"}</small>
  </div>

  <div>
    <%= form.label :log_processor %><br>
    <%= form.select :log_processor, 
        options_for_select(
          LogProcessor::ALL.map { |klass| [klass.name.demodulize.humanize, klass.name.demodulize] }, 
          agent.log_processor
        ), 
        {}, 
        { class: "form-select" } %>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>
