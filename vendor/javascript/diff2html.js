// diff2html@3.4.51 downloaded from https://ga.jspm.io/npm:diff2html@3.4.51/lib-esm/diff2html.js

import*as e from"diff";import*as n from"hogan.js";var t;(function(e){e.INSERT="insert";e.DELETE="delete";e.CONTEXT="context"})(t||(t={}));const i={LINE_BY_LINE:"line-by-line",SIDE_BY_SIDE:"side-by-side"};const s={LINES:"lines",WORDS:"words",NONE:"none"};const l={WORD:"word",CHAR:"char"};var r;(function(e){e.AUTO="auto";e.DARK="dark";e.LIGHT="light"})(r||(r={}));const o=["-","[","]","/","{","}","(",")","*","+","?",".","\\","^","$","|"];const a=RegExp("["+o.join("\\")+"]","g");function escapeForRegExp(e){return e.replace(a,"\\$&")}function unifyPath(e){return e?e.replace(/\\/g,"/"):e}function hashCode(e){let n,t,i;let s=0;for(n=0,i=e.length;n<i;n++){t=e.charCodeAt(n);s=(s<<5)-s+t;s|=0}return s}function getExtension(e,n){const t=e.split(".");return t.length>1?t[t.length-1]:n}function startsWithAny(e,n){return n.reduce(((n,t)=>n||e.startsWith(t)),false)}const c=["a/","b/","i/","w/","c/","o/"];function getFilename(e,n,t){const i=t!==void 0?[...c,t]:c;const s=n?new RegExp(`^${escapeForRegExp(n)} "?(.+?)"?$`):new RegExp('^"?(.+?)"?$');const[,l=""]=s.exec(e)||[];const r=i.find((e=>l.indexOf(e)===0));const o=r?l.slice(r.length):l;return o.replace(/\s+\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d+)? [+-]\d{4}.*$/,"")}function getSrcFilename(e,n){return getFilename(e,"---",n)}function getDstFilename(e,n){return getFilename(e,"+++",n)}function parse$1(e,n={}){const i=[];let s=null;let l=null;let r=null;let o=null;let a=null;let c=null;let d=null;const h="--- ";const f="+++ ";const b="@@";const g=/^old mode (\d{6})/;const p=/^new mode (\d{6})/;const u=/^deleted file mode (\d{6})/;const m=/^new file mode (\d{6})/;const v=/^copy from "?(.+)"?/;const w=/^copy to "?(.+)"?/;const N=/^rename from "?(.+)"?/;const y=/^rename to "?(.+)"?/;const x=/^similarity index (\d+)%/;const L=/^dissimilarity index (\d+)%/;const E=/^index ([\da-z]+)\.\.([\da-z]+)\s*(\d{6})?/;const C=/^Binary files (.*) and (.*) differ/;const T=/^GIT binary patch/;const S=/^index ([\da-z]+),([\da-z]+)\.\.([\da-z]+)/;const H=/^mode (\d{6}),(\d{6})\.\.(\d{6})/;const F=/^new file mode (\d{6})/;const O=/^deleted file mode (\d{6}),(\d{6})/;const I=e.replace(/\\ No newline at end of file/g,"").replace(/\r\n?/g,"\n").split("\n");function saveBlock(){if(l!==null&&s!==null){s.blocks.push(l);l=null}}function saveFile(){if(s!==null){s.oldName||c===null||(s.oldName=c);s.newName||d===null||(s.newName=d);if(s.newName){i.push(s);s=null}}c=null;d=null}function startFile(){saveBlock();saveFile();s={blocks:[],deletedLines:0,addedLines:0}}function startBlock(e){saveBlock();let n;if(s!==null)if(n=/^@@ -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@.*/.exec(e)){s.isCombined=false;r=parseInt(n[1],10);a=parseInt(n[2],10)}else if(n=/^@@@ -(\d+)(?:,\d+)? -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@@.*/.exec(e)){s.isCombined=true;r=parseInt(n[1],10);o=parseInt(n[2],10);a=parseInt(n[3],10)}else{e.startsWith(b)&&console.error("Failed to parse lines, starting in 0!");r=0;a=0;s.isCombined=false}l={lines:[],oldStartLine:r,oldStartLine2:o,newStartLine:a,header:e}}function createLine(e){if(s===null||l===null||r===null||a===null)return;const n={content:e};const i=s.isCombined?["+ "," +","++"]:["+"];const o=s.isCombined?["- "," -","--"]:["-"];if(startsWithAny(e,i)){s.addedLines++;n.type=t.INSERT;n.oldNumber=void 0;n.newNumber=a++}else if(startsWithAny(e,o)){s.deletedLines++;n.type=t.DELETE;n.oldNumber=r++;n.newNumber=void 0}else{n.type=t.CONTEXT;n.oldNumber=r++;n.newNumber=a++}l.lines.push(n)}function existHunkHeader(e,n){let t=n;while(t<I.length-3){if(e.startsWith("diff"))return false;if(I[t].startsWith(h)&&I[t+1].startsWith(f)&&I[t+2].startsWith(b))return true;t++}return false}I.forEach(((e,t)=>{if(!e||e.startsWith("*"))return;let r;const o=I[t-1];const a=I[t+1];const D=I[t+2];if(e.startsWith("diff --git")||e.startsWith("diff --combined")){startFile();const t=/^diff --git "?([a-ciow]\/.+)"? "?([a-ciow]\/.+)"?/;if(r=t.exec(e)){c=getFilename(r[1],void 0,n.dstPrefix);d=getFilename(r[2],void 0,n.srcPrefix)}if(s===null)throw new Error("Where is my file !!!");s.isGitDiff=true;return}if(e.startsWith("Binary files")&&!(s===null||s===void 0?void 0:s.isGitDiff)){startFile();const t=/^Binary files "?([a-ciow]\/.+)"? and "?([a-ciow]\/.+)"? differ/;if(r=t.exec(e)){c=getFilename(r[1],void 0,n.dstPrefix);d=getFilename(r[2],void 0,n.srcPrefix)}if(s===null)throw new Error("Where is my file !!!");s.isBinary=true;return}(!s||!s.isGitDiff&&s&&e.startsWith(h)&&a.startsWith(f)&&D.startsWith(b))&&startFile();if(s===null||s===void 0?void 0:s.isTooBig)return;if(s&&(typeof n.diffMaxChanges==="number"&&s.addedLines+s.deletedLines>n.diffMaxChanges||typeof n.diffMaxLineLength==="number"&&e.length>n.diffMaxLineLength)){s.isTooBig=true;s.addedLines=0;s.deletedLines=0;s.blocks=[];l=null;const e=typeof n.diffTooBigMessage==="function"?n.diffTooBigMessage(i.length):"Diff too big to be displayed";startBlock(e);return}if(e.startsWith(h)&&a.startsWith(f)||e.startsWith(f)&&o.startsWith(h)){if(s&&!s.oldName&&e.startsWith("--- ")&&(r=getSrcFilename(e,n.srcPrefix))){s.oldName=r;s.language=getExtension(s.oldName,s.language);return}if(s&&!s.newName&&e.startsWith("+++ ")&&(r=getDstFilename(e,n.dstPrefix))){s.newName=r;s.language=getExtension(s.newName,s.language);return}}if(s&&(e.startsWith(b)||s.isGitDiff&&s.oldName&&s.newName&&!l)){startBlock(e);return}if(l&&(e.startsWith("+")||e.startsWith("-")||e.startsWith(" "))){createLine(e);return}const k=!existHunkHeader(e,t);if(s===null)throw new Error("Where is my file !!!");if(r=g.exec(e))s.oldMode=r[1];else if(r=p.exec(e))s.newMode=r[1];else if(r=u.exec(e)){s.deletedFileMode=r[1];s.isDeleted=true}else if(r=m.exec(e)){s.newFileMode=r[1];s.isNew=true}else if(r=v.exec(e)){k&&(s.oldName=r[1]);s.isCopy=true}else if(r=w.exec(e)){k&&(s.newName=r[1]);s.isCopy=true}else if(r=N.exec(e)){k&&(s.oldName=r[1]);s.isRename=true}else if(r=y.exec(e)){k&&(s.newName=r[1]);s.isRename=true}else if(r=C.exec(e)){s.isBinary=true;s.oldName=getFilename(r[1],void 0,n.srcPrefix);s.newName=getFilename(r[2],void 0,n.dstPrefix);startBlock("Binary file")}else if(T.test(e)){s.isBinary=true;startBlock(e)}else if(r=x.exec(e))s.unchangedPercentage=parseInt(r[1],10);else if(r=L.exec(e))s.changedPercentage=parseInt(r[1],10);else if(r=E.exec(e)){s.checksumBefore=r[1];s.checksumAfter=r[2];r[3]&&(s.mode=r[3])}else if(r=S.exec(e)){s.checksumBefore=[r[2],r[3]];s.checksumAfter=r[1]}else if(r=H.exec(e)){s.oldMode=[r[2],r[3]];s.newMode=r[1]}else if(r=F.exec(e)){s.newFileMode=r[1];s.isNew=true}else if(r=O.exec(e)){s.deletedFileMode=r[1];s.isDeleted=true}}));saveBlock();saveFile();return i}function levenshtein(e,n){if(e.length===0)return n.length;if(n.length===0)return e.length;const t=[];let i;for(i=0;i<=n.length;i++)t[i]=[i];let s;for(s=0;s<=e.length;s++)t[0][s]=s;for(i=1;i<=n.length;i++)for(s=1;s<=e.length;s++)n.charAt(i-1)===e.charAt(s-1)?t[i][s]=t[i-1][s-1]:t[i][s]=Math.min(t[i-1][s-1]+1,Math.min(t[i][s-1]+1,t[i-1][s]+1));return t[n.length][e.length]}function newDistanceFn(e){return(n,t)=>{const i=e(n).trim();const s=e(t).trim();const l=levenshtein(i,s);return l/(i.length+s.length)}}function newMatcherFn(e){function findBestMatch(n,t,i=new Map){let s=Infinity;let l;for(let r=0;r<n.length;++r)for(let o=0;o<t.length;++o){const a=JSON.stringify([n[r],t[o]]);let c;if(!(i.has(a)&&(c=i.get(a)))){c=e(n[r],t[o]);i.set(a,c)}if(c<s){s=c;l={indexA:r,indexB:o,score:s}}}return l}function group(e,n,t=0,i=new Map){const s=findBestMatch(e,n,i);if(!s||e.length+n.length<3)return[[e,n]];const l=e.slice(0,s.indexA);const r=n.slice(0,s.indexB);const o=[e[s.indexA]];const a=[n[s.indexB]];const c=s.indexA+1;const d=s.indexB+1;const h=e.slice(c);const f=n.slice(d);const b=group(l,r,t+1,i);const g=group(o,a,t+1,i);const p=group(h,f,t+1,i);let u=g;(s.indexA>0||s.indexB>0)&&(u=b.concat(u));(e.length>c||n.length>d)&&(u=u.concat(p));return u}return group}const d={INSERTS:"d2h-ins",DELETES:"d2h-del",CONTEXT:"d2h-cntx",INFO:"d2h-info",INSERT_CHANGES:"d2h-ins d2h-change",DELETE_CHANGES:"d2h-del d2h-change"};const h={matching:s.NONE,matchWordsThreshold:.25,maxLineLengthHighlight:1e4,diffStyle:l.WORD,colorScheme:r.LIGHT};const f="/";const b=newDistanceFn((e=>e.value));const g=newMatcherFn(b);function isDevNullName(e){return e.indexOf("dev/null")!==-1}function removeInsElements(e){return e.replace(/(<ins[^>]*>((.|\n)*?)<\/ins>)/g,"")}function removeDelElements(e){return e.replace(/(<del[^>]*>((.|\n)*?)<\/del>)/g,"")}function toCSSClass(e){switch(e){case t.CONTEXT:return d.CONTEXT;case t.INSERT:return d.INSERTS;case t.DELETE:return d.DELETES}}function colorSchemeToCss(e){switch(e){case r.DARK:return"d2h-dark-color-scheme";case r.AUTO:return"d2h-auto-color-scheme";case r.LIGHT:default:return"d2h-light-color-scheme"}}function prefixLength(e){return e?2:1}function escapeForHtml(e){return e.slice(0).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;")}function deconstructLine(e,n,t=true){const i=prefixLength(n);return{prefix:e.substring(0,i),content:t?escapeForHtml(e.substring(i)):e.substring(i)}}function filenameDiff(e){const n=unifyPath(e.oldName);const t=unifyPath(e.newName);if(n===t||isDevNullName(n)||isDevNullName(t))return isDevNullName(t)?n:t;{const e=[];const i=[];const s=n.split(f);const l=t.split(f);const r=s.length;const o=l.length;let a=0;let c=r-1;let d=o-1;while(a<c&&a<d){if(s[a]!==l[a])break;e.push(l[a]);a+=1}while(c>a&&d>a){if(s[c]!==l[d])break;i.unshift(l[d]);c-=1;d-=1}const h=e.join(f);const b=i.join(f);const g=s.slice(a,c+1).join(f);const p=l.slice(a,d+1).join(f);return h.length&&b.length?h+f+"{"+g+" → "+p+"}"+f+b:h.length?h+f+"{"+g+" → "+p+"}":b.length?"{"+g+" → "+p+"}"+f+b:n+" → "+t}}function getHtmlId(e){return`d2h-${hashCode(filenameDiff(e)).toString().slice(-6)}`}function getFileIcon(e){let n="file-changed";e.isRename||e.isCopy?n="file-renamed":e.isNew?n="file-added":e.isDeleted?n="file-deleted":e.newName!==e.oldName&&(n="file-renamed");return n}function diffHighlight(n,t,i,s={}){const{matching:l,maxLineLengthHighlight:r,matchWordsThreshold:o,diffStyle:a}=Object.assign(Object.assign({},h),s);const c=deconstructLine(n,i,false);const d=deconstructLine(t,i,false);if(c.content.length>r||d.content.length>r)return{oldLine:{prefix:c.prefix,content:escapeForHtml(c.content)},newLine:{prefix:d.prefix,content:escapeForHtml(d.content)}};const f=a==="char"?e.diffChars(c.content,d.content):e.diffWordsWithSpace(c.content,d.content);const p=[];if(a==="word"&&l==="words"){const e=f.filter((e=>e.removed));const n=f.filter((e=>e.added));const t=g(n,e);t.forEach((e=>{if(e[0].length===1&&e[1].length===1){const n=b(e[0][0],e[1][0]);if(n<o){p.push(e[0][0]);p.push(e[1][0])}}}))}const u=f.reduce(((e,n)=>{const t=n.added?"ins":n.removed?"del":null;const i=p.indexOf(n)>-1?' class="d2h-change"':"";const s=escapeForHtml(n.value);return t!==null?`${e}<${t}${i}>${s}</${t}>`:`${e}${s}`}),"");return{oldLine:{prefix:c.prefix,content:removeInsElements(u)},newLine:{prefix:d.prefix,content:removeDelElements(u)}}}const p="file-summary";const u="icon";const m={colorScheme:h.colorScheme};class FileListRenderer{constructor(e,n={}){this.hoganUtils=e;this.config=Object.assign(Object.assign({},m),n)}render(e){const n=e.map((e=>this.hoganUtils.render(p,"line",{fileHtmlId:getHtmlId(e),oldName:e.oldName,newName:e.newName,fileName:filenameDiff(e),deletedLines:"-"+e.deletedLines,addedLines:"+"+e.addedLines},{fileIcon:this.hoganUtils.template(u,getFileIcon(e))}))).join("\n");return this.hoganUtils.render(p,"wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),filesNumber:e.length,files:n})}}const v=Object.assign(Object.assign({},h),{renderNothingWhenEmpty:false,matchingMaxComparisons:2500,maxLineSizeInBlockForComparison:200});const w="generic";const N="line-by-line";const y="icon";const x="tag";class LineByLineRenderer{constructor(e,n={}){this.hoganUtils=e;this.config=Object.assign(Object.assign({},v),n)}render(e){const n=e.map((e=>{let n;n=e.blocks.length?this.generateFileHtml(e):this.generateEmptyDiff();return this.makeFileDiffHtml(e,n)})).join("\n");return this.hoganUtils.render(w,"wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),content:n})}makeFileDiffHtml(e,n){if(this.config.renderNothingWhenEmpty&&Array.isArray(e.blocks)&&e.blocks.length===0)return"";const t=this.hoganUtils.template(N,"file-diff");const i=this.hoganUtils.template(w,"file-path");const s=this.hoganUtils.template(y,"file");const l=this.hoganUtils.template(x,getFileIcon(e));return t.render({file:e,fileHtmlId:getHtmlId(e),diffs:n,filePath:i.render({fileDiffName:filenameDiff(e)},{fileIcon:s,fileTag:l})})}generateEmptyDiff(){return this.hoganUtils.render(w,"empty-diff",{contentClass:"d2h-code-line",CSSLineClass:d})}generateFileHtml(e){const n=newMatcherFn(newDistanceFn((n=>deconstructLine(n.content,e.isCombined).content)));return e.blocks.map((t=>{let i=this.hoganUtils.render(w,"block-header",{CSSLineClass:d,blockHeader:e.isTooBig?t.header:escapeForHtml(t.header),lineClass:"d2h-code-linenumber",contentClass:"d2h-code-line"});this.applyLineGroupping(t).forEach((([t,s,l])=>{if(s.length&&l.length&&!t.length)this.applyRematchMatching(s,l,n).map((([n,t])=>{const{left:s,right:l}=this.processChangedLines(e,e.isCombined,n,t);i+=s;i+=l}));else if(t.length)t.forEach((n=>{const{prefix:t,content:s}=deconstructLine(n.content,e.isCombined);i+=this.generateSingleLineHtml(e,{type:d.CONTEXT,prefix:t,content:s,oldNumber:n.oldNumber,newNumber:n.newNumber})}));else if(s.length||l.length){const{left:n,right:t}=this.processChangedLines(e,e.isCombined,s,l);i+=n;i+=t}else console.error("Unknown state reached while processing groups of lines",t,s,l)}));return i})).join("\n")}applyLineGroupping(e){const n=[];let i=[];let s=[];for(let l=0;l<e.lines.length;l++){const r=e.lines[l];if(r.type!==t.INSERT&&s.length||r.type===t.CONTEXT&&i.length>0){n.push([[],i,s]);i=[];s=[]}r.type===t.CONTEXT?n.push([[r],[],[]]):r.type===t.INSERT&&i.length===0?n.push([[],[],[r]]):r.type===t.INSERT&&i.length>0?s.push(r):r.type===t.DELETE&&i.push(r)}if(i.length||s.length){n.push([[],i,s]);i=[];s=[]}return n}applyRematchMatching(e,n,t){const i=e.length*n.length;const s=Math.max.apply(null,[0].concat(e.concat(n).map((e=>e.content.length))));const l=i<this.config.matchingMaxComparisons&&s<this.config.maxLineSizeInBlockForComparison&&(this.config.matching==="lines"||this.config.matching==="words");return l?t(e,n):[[e,n]]}processChangedLines(e,n,t,i){const s={right:"",left:""};const l=Math.max(t.length,i.length);for(let r=0;r<l;r++){const l=t[r];const o=i[r];const a=l!==void 0&&o!==void 0?diffHighlight(l.content,o.content,n,this.config):void 0;const c=l!==void 0&&l.oldNumber!==void 0?Object.assign(Object.assign({},a!==void 0?{prefix:a.oldLine.prefix,content:a.oldLine.content,type:d.DELETE_CHANGES}:Object.assign(Object.assign({},deconstructLine(l.content,n)),{type:toCSSClass(l.type)})),{oldNumber:l.oldNumber,newNumber:l.newNumber}):void 0;const h=o!==void 0&&o.newNumber!==void 0?Object.assign(Object.assign({},a!==void 0?{prefix:a.newLine.prefix,content:a.newLine.content,type:d.INSERT_CHANGES}:Object.assign(Object.assign({},deconstructLine(o.content,n)),{type:toCSSClass(o.type)})),{oldNumber:o.oldNumber,newNumber:o.newNumber}):void 0;const{left:f,right:b}=this.generateLineHtml(e,c,h);s.left+=f;s.right+=b}return s}generateLineHtml(e,n,t){return{left:this.generateSingleLineHtml(e,n),right:this.generateSingleLineHtml(e,t)}}generateSingleLineHtml(e,n){if(n===void 0)return"";const t=this.hoganUtils.render(N,"numbers",{oldNumber:n.oldNumber||"",newNumber:n.newNumber||""});return this.hoganUtils.render(w,"line",{type:n.type,lineClass:"d2h-code-linenumber",contentClass:"d2h-code-line",prefix:n.prefix===" "?"&nbsp;":n.prefix,content:n.content,lineNumber:t,line:n,file:e})}}const L=Object.assign(Object.assign({},h),{renderNothingWhenEmpty:false,matchingMaxComparisons:2500,maxLineSizeInBlockForComparison:200});const E="generic";const C="side-by-side";const T="icon";const S="tag";class SideBySideRenderer{constructor(e,n={}){this.hoganUtils=e;this.config=Object.assign(Object.assign({},L),n)}render(e){const n=e.map((e=>{let n;n=e.blocks.length?this.generateFileHtml(e):this.generateEmptyDiff();return this.makeFileDiffHtml(e,n)})).join("\n");return this.hoganUtils.render(E,"wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),content:n})}makeFileDiffHtml(e,n){if(this.config.renderNothingWhenEmpty&&Array.isArray(e.blocks)&&e.blocks.length===0)return"";const t=this.hoganUtils.template(C,"file-diff");const i=this.hoganUtils.template(E,"file-path");const s=this.hoganUtils.template(T,"file");const l=this.hoganUtils.template(S,getFileIcon(e));return t.render({file:e,fileHtmlId:getHtmlId(e),diffs:n,filePath:i.render({fileDiffName:filenameDiff(e)},{fileIcon:s,fileTag:l})})}generateEmptyDiff(){return{right:"",left:this.hoganUtils.render(E,"empty-diff",{contentClass:"d2h-code-side-line",CSSLineClass:d})}}generateFileHtml(e){const n=newMatcherFn(newDistanceFn((n=>deconstructLine(n.content,e.isCombined).content)));return e.blocks.map((t=>{const i={left:this.makeHeaderHtml(t.header,e),right:this.makeHeaderHtml("")};this.applyLineGroupping(t).forEach((([t,s,l])=>{if(s.length&&l.length&&!t.length)this.applyRematchMatching(s,l,n).map((([n,t])=>{const{left:s,right:l}=this.processChangedLines(e.isCombined,n,t);i.left+=s;i.right+=l}));else if(t.length)t.forEach((n=>{const{prefix:t,content:s}=deconstructLine(n.content,e.isCombined);const{left:l,right:r}=this.generateLineHtml({type:d.CONTEXT,prefix:t,content:s,number:n.oldNumber},{type:d.CONTEXT,prefix:t,content:s,number:n.newNumber});i.left+=l;i.right+=r}));else if(s.length||l.length){const{left:n,right:t}=this.processChangedLines(e.isCombined,s,l);i.left+=n;i.right+=t}else console.error("Unknown state reached while processing groups of lines",t,s,l)}));return i})).reduce(((e,n)=>({left:e.left+n.left,right:e.right+n.right})),{left:"",right:""})}applyLineGroupping(e){const n=[];let i=[];let s=[];for(let l=0;l<e.lines.length;l++){const r=e.lines[l];if(r.type!==t.INSERT&&s.length||r.type===t.CONTEXT&&i.length>0){n.push([[],i,s]);i=[];s=[]}r.type===t.CONTEXT?n.push([[r],[],[]]):r.type===t.INSERT&&i.length===0?n.push([[],[],[r]]):r.type===t.INSERT&&i.length>0?s.push(r):r.type===t.DELETE&&i.push(r)}if(i.length||s.length){n.push([[],i,s]);i=[];s=[]}return n}applyRematchMatching(e,n,t){const i=e.length*n.length;const s=Math.max.apply(null,[0].concat(e.concat(n).map((e=>e.content.length))));const l=i<this.config.matchingMaxComparisons&&s<this.config.maxLineSizeInBlockForComparison&&(this.config.matching==="lines"||this.config.matching==="words");return l?t(e,n):[[e,n]]}makeHeaderHtml(e,n){return this.hoganUtils.render(E,"block-header",{CSSLineClass:d,blockHeader:(n===null||n===void 0?void 0:n.isTooBig)?e:escapeForHtml(e),lineClass:"d2h-code-side-linenumber",contentClass:"d2h-code-side-line"})}processChangedLines(e,n,t){const i={right:"",left:""};const s=Math.max(n.length,t.length);for(let l=0;l<s;l++){const s=n[l];const r=t[l];const o=s!==void 0&&r!==void 0?diffHighlight(s.content,r.content,e,this.config):void 0;const a=s!==void 0&&s.oldNumber!==void 0?Object.assign(Object.assign({},o!==void 0?{prefix:o.oldLine.prefix,content:o.oldLine.content,type:d.DELETE_CHANGES}:Object.assign(Object.assign({},deconstructLine(s.content,e)),{type:toCSSClass(s.type)})),{number:s.oldNumber}):void 0;const c=r!==void 0&&r.newNumber!==void 0?Object.assign(Object.assign({},o!==void 0?{prefix:o.newLine.prefix,content:o.newLine.content,type:d.INSERT_CHANGES}:Object.assign(Object.assign({},deconstructLine(r.content,e)),{type:toCSSClass(r.type)})),{number:r.newNumber}):void 0;const{left:h,right:f}=this.generateLineHtml(a,c);i.left+=h;i.right+=f}return i}generateLineHtml(e,n){return{left:this.generateSingleHtml(e),right:this.generateSingleHtml(n)}}generateSingleHtml(e){const n="d2h-code-side-linenumber";const t="d2h-code-side-line";return this.hoganUtils.render(E,"line",{type:(e===null||e===void 0?void 0:e.type)||`${d.CONTEXT} d2h-emptyplaceholder`,lineClass:e!==void 0?n:`${n} d2h-code-side-emptyplaceholder`,contentClass:e!==void 0?t:`${t} d2h-code-side-emptyplaceholder`,prefix:(e===null||e===void 0?void 0:e.prefix)===" "?"&nbsp;":e===null||e===void 0?void 0:e.prefix,content:e===null||e===void 0?void 0:e.content,lineNumber:e===null||e===void 0?void 0:e.number})}}const H={};H["file-summary-line"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<li class="d2h-file-list-line">');i.b("\n"+t);i.b('    <span class="d2h-file-name-wrapper">');i.b("\n"+t);i.b(i.rp("<fileIcon0",e,n,"      "));i.b('      <a href="#');i.b(i.v(i.f("fileHtmlId",e,n,0)));i.b('" class="d2h-file-name">');i.b(i.v(i.f("fileName",e,n,0)));i.b("</a>");i.b("\n"+t);i.b('      <span class="d2h-file-stats">');i.b("\n"+t);i.b('          <span class="d2h-lines-added">');i.b(i.v(i.f("addedLines",e,n,0)));i.b("</span>");i.b("\n"+t);i.b('          <span class="d2h-lines-deleted">');i.b(i.v(i.f("deletedLines",e,n,0)));i.b("</span>");i.b("\n"+t);i.b("      </span>");i.b("\n"+t);i.b("    </span>");i.b("\n"+t);i.b("</li>");return i.fl()},partials:{"<fileIcon0":{name:"fileIcon",partials:{},subs:{}}},subs:{}});H["file-summary-wrapper"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<div class="d2h-file-list-wrapper ');i.b(i.v(i.f("colorScheme",e,n,0)));i.b('">');i.b("\n"+t);i.b('    <div class="d2h-file-list-header">');i.b("\n"+t);i.b('        <span class="d2h-file-list-title">Files changed (');i.b(i.v(i.f("filesNumber",e,n,0)));i.b(")</span>");i.b("\n"+t);i.b('        <a class="d2h-file-switch d2h-hide">hide</a>');i.b("\n"+t);i.b('        <a class="d2h-file-switch d2h-show">show</a>');i.b("\n"+t);i.b("    </div>");i.b("\n"+t);i.b('    <ol class="d2h-file-list">');i.b("\n"+t);i.b("    ");i.b(i.t(i.f("files",e,n,0)));i.b("\n"+t);i.b("    </ol>");i.b("\n"+t);i.b("</div>");return i.fl()},partials:{},subs:{}});H["generic-block-header"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b("<tr>");i.b("\n"+t);i.b('    <td class="');i.b(i.v(i.f("lineClass",e,n,0)));i.b(" ");i.b(i.v(i.d("CSSLineClass.INFO",e,n,0)));i.b('"></td>');i.b("\n"+t);i.b('    <td class="');i.b(i.v(i.d("CSSLineClass.INFO",e,n,0)));i.b('">');i.b("\n"+t);i.b('        <div class="');i.b(i.v(i.f("contentClass",e,n,0)));i.b('">');if(i.s(i.f("blockHeader",e,n,1),e,n,0,156,173,"{{ }}")){i.rs(e,n,(function(e,n,t){t.b(t.t(t.f("blockHeader",e,n,0)))}));e.pop()}i.s(i.f("blockHeader",e,n,1),e,n,1,0,0,"")||i.b("&nbsp;");i.b("</div>");i.b("\n"+t);i.b("    </td>");i.b("\n"+t);i.b("</tr>");return i.fl()},partials:{},subs:{}});H["generic-empty-diff"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b("<tr>");i.b("\n"+t);i.b('    <td class="');i.b(i.v(i.d("CSSLineClass.INFO",e,n,0)));i.b('">');i.b("\n"+t);i.b('        <div class="');i.b(i.v(i.f("contentClass",e,n,0)));i.b('">');i.b("\n"+t);i.b("            File without changes");i.b("\n"+t);i.b("        </div>");i.b("\n"+t);i.b("    </td>");i.b("\n"+t);i.b("</tr>");return i.fl()},partials:{},subs:{}});H["generic-file-path"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<span class="d2h-file-name-wrapper">');i.b("\n"+t);i.b(i.rp("<fileIcon0",e,n,"    "));i.b('    <span class="d2h-file-name">');i.b(i.v(i.f("fileDiffName",e,n,0)));i.b("</span>");i.b("\n"+t);i.b(i.rp("<fileTag1",e,n,"    "));i.b("</span>");i.b("\n"+t);i.b('<label class="d2h-file-collapse">');i.b("\n"+t);i.b('    <input class="d2h-file-collapse-input" type="checkbox" name="viewed" value="viewed">');i.b("\n"+t);i.b("    Viewed");i.b("\n"+t);i.b("</label>");return i.fl()},partials:{"<fileIcon0":{name:"fileIcon",partials:{},subs:{}},"<fileTag1":{name:"fileTag",partials:{},subs:{}}},subs:{}});H["generic-line"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b("<tr>");i.b("\n"+t);i.b('    <td class="');i.b(i.v(i.f("lineClass",e,n,0)));i.b(" ");i.b(i.v(i.f("type",e,n,0)));i.b('">');i.b("\n"+t);i.b("      ");i.b(i.t(i.f("lineNumber",e,n,0)));i.b("\n"+t);i.b("    </td>");i.b("\n"+t);i.b('    <td class="');i.b(i.v(i.f("type",e,n,0)));i.b('">');i.b("\n"+t);i.b('        <div class="');i.b(i.v(i.f("contentClass",e,n,0)));i.b('">');i.b("\n"+t);if(i.s(i.f("prefix",e,n,1),e,n,0,162,238,"{{ }}")){i.rs(e,n,(function(e,n,i){i.b('            <span class="d2h-code-line-prefix">');i.b(i.t(i.f("prefix",e,n,0)));i.b("</span>");i.b("\n"+t)}));e.pop()}if(!i.s(i.f("prefix",e,n,1),e,n,1,0,0,"")){i.b('            <span class="d2h-code-line-prefix">&nbsp;</span>');i.b("\n"+t)}if(i.s(i.f("content",e,n,1),e,n,0,371,445,"{{ }}")){i.rs(e,n,(function(e,n,i){i.b('            <span class="d2h-code-line-ctn">');i.b(i.t(i.f("content",e,n,0)));i.b("</span>");i.b("\n"+t)}));e.pop()}if(!i.s(i.f("content",e,n,1),e,n,1,0,0,"")){i.b('            <span class="d2h-code-line-ctn"><br></span>');i.b("\n"+t)}i.b("        </div>");i.b("\n"+t);i.b("    </td>");i.b("\n"+t);i.b("</tr>");return i.fl()},partials:{},subs:{}});H["generic-wrapper"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<div class="d2h-wrapper ');i.b(i.v(i.f("colorScheme",e,n,0)));i.b('">');i.b("\n"+t);i.b("    ");i.b(i.t(i.f("content",e,n,0)));i.b("\n"+t);i.b("</div>");return i.fl()},partials:{},subs:{}});H["icon-file-added"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<svg aria-hidden="true" class="d2h-icon d2h-added" height="16" title="added" version="1.1" viewBox="0 0 14 16"');i.b("\n"+t);i.b('     width="14">');i.b("\n"+t);i.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM6 9H3V7h3V4h2v3h3v2H8v3H6V9z"></path>');i.b("\n"+t);i.b("</svg>");return i.fl()},partials:{},subs:{}});H["icon-file-changed"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<svg aria-hidden="true" class="d2h-icon d2h-changed" height="16" title="modified" version="1.1"');i.b("\n"+t);i.b('     viewBox="0 0 14 16" width="14">');i.b("\n"+t);i.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM4 8c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3z"></path>');i.b("\n"+t);i.b("</svg>");return i.fl()},partials:{},subs:{}});H["icon-file-deleted"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<svg aria-hidden="true" class="d2h-icon d2h-deleted" height="16" title="removed" version="1.1"');i.b("\n"+t);i.b('     viewBox="0 0 14 16" width="14">');i.b("\n"+t);i.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM11 9H3V7h8v2z"></path>');i.b("\n"+t);i.b("</svg>");return i.fl()},partials:{},subs:{}});H["icon-file-renamed"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<svg aria-hidden="true" class="d2h-icon d2h-moved" height="16" title="renamed" version="1.1"');i.b("\n"+t);i.b('     viewBox="0 0 14 16" width="14">');i.b("\n"+t);i.b('    <path d="M6 9H3V7h3V4l5 4-5 4V9z m8-7v12c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h12c0.55 0 1 0.45 1 1z m-1 0H1v12h12V2z"></path>');i.b("\n"+t);i.b("</svg>");return i.fl()},partials:{},subs:{}});H["icon-file"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<svg aria-hidden="true" class="d2h-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12">');i.b("\n"+t);i.b('    <path d="M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z"></path>');i.b("\n"+t);i.b("</svg>");return i.fl()},partials:{},subs:{}});H["line-by-line-file-diff"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<div id="');i.b(i.v(i.f("fileHtmlId",e,n,0)));i.b('" class="d2h-file-wrapper" data-lang="');i.b(i.v(i.d("file.language",e,n,0)));i.b('">');i.b("\n"+t);i.b('    <div class="d2h-file-header">');i.b("\n"+t);i.b("    ");i.b(i.t(i.f("filePath",e,n,0)));i.b("\n"+t);i.b("    </div>");i.b("\n"+t);i.b('    <div class="d2h-file-diff">');i.b("\n"+t);i.b('        <div class="d2h-code-wrapper">');i.b("\n"+t);i.b('            <table class="d2h-diff-table">');i.b("\n"+t);i.b('                <tbody class="d2h-diff-tbody">');i.b("\n"+t);i.b("                ");i.b(i.t(i.f("diffs",e,n,0)));i.b("\n"+t);i.b("                </tbody>");i.b("\n"+t);i.b("            </table>");i.b("\n"+t);i.b("        </div>");i.b("\n"+t);i.b("    </div>");i.b("\n"+t);i.b("</div>");return i.fl()},partials:{},subs:{}});H["line-by-line-numbers"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<div class="line-num1">');i.b(i.v(i.f("oldNumber",e,n,0)));i.b("</div>");i.b("\n"+t);i.b('<div class="line-num2">');i.b(i.v(i.f("newNumber",e,n,0)));i.b("</div>");return i.fl()},partials:{},subs:{}});H["side-by-side-file-diff"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<div id="');i.b(i.v(i.f("fileHtmlId",e,n,0)));i.b('" class="d2h-file-wrapper" data-lang="');i.b(i.v(i.d("file.language",e,n,0)));i.b('">');i.b("\n"+t);i.b('    <div class="d2h-file-header">');i.b("\n"+t);i.b("      ");i.b(i.t(i.f("filePath",e,n,0)));i.b("\n"+t);i.b("    </div>");i.b("\n"+t);i.b('    <div class="d2h-files-diff">');i.b("\n"+t);i.b('        <div class="d2h-file-side-diff">');i.b("\n"+t);i.b('            <div class="d2h-code-wrapper">');i.b("\n"+t);i.b('                <table class="d2h-diff-table">');i.b("\n"+t);i.b('                    <tbody class="d2h-diff-tbody">');i.b("\n"+t);i.b("                    ");i.b(i.t(i.d("diffs.left",e,n,0)));i.b("\n"+t);i.b("                    </tbody>");i.b("\n"+t);i.b("                </table>");i.b("\n"+t);i.b("            </div>");i.b("\n"+t);i.b("        </div>");i.b("\n"+t);i.b('        <div class="d2h-file-side-diff">');i.b("\n"+t);i.b('            <div class="d2h-code-wrapper">');i.b("\n"+t);i.b('                <table class="d2h-diff-table">');i.b("\n"+t);i.b('                    <tbody class="d2h-diff-tbody">');i.b("\n"+t);i.b("                    ");i.b(i.t(i.d("diffs.right",e,n,0)));i.b("\n"+t);i.b("                    </tbody>");i.b("\n"+t);i.b("                </table>");i.b("\n"+t);i.b("            </div>");i.b("\n"+t);i.b("        </div>");i.b("\n"+t);i.b("    </div>");i.b("\n"+t);i.b("</div>");return i.fl()},partials:{},subs:{}});H["tag-file-added"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<span class="d2h-tag d2h-added d2h-added-tag">ADDED</span>');return i.fl()},partials:{},subs:{}});H["tag-file-changed"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<span class="d2h-tag d2h-changed d2h-changed-tag">CHANGED</span>');return i.fl()},partials:{},subs:{}});H["tag-file-deleted"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<span class="d2h-tag d2h-deleted d2h-deleted-tag">DELETED</span>');return i.fl()},partials:{},subs:{}});H["tag-file-renamed"]=new n.Template({code:function(e,n,t){var i=this;i.b(t=t||"");i.b('<span class="d2h-tag d2h-moved d2h-moved-tag">RENAMED</span>');return i.fl()},partials:{},subs:{}});class HoganJsUtils{constructor({compiledTemplates:e={},rawTemplates:t={}}){const i=Object.entries(t).reduce(((e,[t,i])=>{const s=n.compile(i,{asString:false});return Object.assign(Object.assign({},e),{[t]:s})}),{});this.preCompiledTemplates=Object.assign(Object.assign(Object.assign({},H),e),i)}static compile(e){return n.compile(e,{asString:false})}render(e,n,t,i,s){const l=this.templateKey(e,n);try{const e=this.preCompiledTemplates[l];return e.render(t,i,s)}catch(e){throw new Error(`Could not find template to render '${l}'`)}}template(e,n){return this.preCompiledTemplates[this.templateKey(e,n)]}templateKey(e,n){return`${e}-${n}`}}const F=Object.assign(Object.assign(Object.assign({},v),L),{outputFormat:i.LINE_BY_LINE,drawFileList:true});function parse(e,n={}){return parse$1(e,Object.assign(Object.assign({},F),n))}function html(e,n={}){const t=Object.assign(Object.assign({},F),n);const i=typeof e==="string"?parse$1(e,t):e;const s=new HoganJsUtils(t);const{colorScheme:l}=t;const r={colorScheme:l};const o=t.drawFileList?new FileListRenderer(s,r).render(i):"";const a=t.outputFormat==="side-by-side"?new SideBySideRenderer(s,t).render(i):new LineByLineRenderer(s,t).render(i);return o+a}export{F as defaultDiff2HtmlConfig,html,parse};

